>>> /EndToEnd.suite.yml >>>
# Integration suite configuration
#
# Run integration and "WordPress unit" tests.

actor: EndToEndTester
bootstrap: _bootstrap.php
modules:
    enabled:
        - lucatume\WPBrowser\Module\WPWebDriver
        - lucatume\WPBrowser\Module\WPDb
        - lucatume\WPBrowser\Module\WPFilesystem
        - lucatume\WPBrowser\Module\WPLoader
    config:
        lucatume\WPBrowser\Module\WPWebDriver:
            url: '%WORDPRESS_URL%'
            adminUsername: '%WORDPRESS_ADMIN_USER%'
            adminPassword: '%WORDPRESS_ADMIN_PASSWORD%'
            adminPath: '%WORDPRESS_ADMIN_PATH%'
            browser: chrome
            host: '%CHROMEDRIVER_HOST%'
            port: '%CHROMEDRIVER_PORT%'
            path: '/'
            window_size: 1200x1000
            capabilities:
              "goog:chromeOptions":
                args:
                  - "--headless"
                  - "--disable-gpu"
                  - "--disable-dev-shm-usage"
                  - "--proxy-server='direct://'"
                  - "--proxy-bypass-list=*"
                  - "--no-sandbox"
        lucatume\WPBrowser\Module\WPDb:
            dbUrl: '%WORDPRESS_DB_URL%'
            dump: 'tests/_data/dump.sql'
            populate: true
            cleanup: true
            reconnect: false
            url: '%WORDPRESS_URL%'
            urlReplacement: false
            tablePrefix: '%WORDPRESS_TABLE_PREFIX%'
        lucatume\WPBrowser\Module\WPFilesystem:
            wpRootFolder: '%WORDPRESS_ROOT_DIR%'
        lucatume\WPBrowser\Module\WPLoader:
            loadOnly: true
            wpRootFolder: '%WORDPRESS_ROOT_DIR%'
            dbUrl: '%WORDPRESS_DB_URL%'
            domain: '%WORDPRESS_DOMAIN%'
 
<<< /EndToEnd.suite.yml <<<

>>> /Integration/SampleTest.php >>>
<?php

namespace Tests;

use lucatume\WPBrowser\TestCase\WPTestCase;

class SampleTest extends WPTestCase
{
    public function setUp(): void
    {
        // Before...
        parent::setUp();

        // Your set-up methods here.
    }

    public function tearDown(): void
    {
        // Your tear down methods here.

        // Then...
        parent::tearDown();
    }

    // Tests
    public function test_factory(): void
    {
        $post = static::factory()->post->create_and_get();

        $this->assertInstanceOf(\WP_Post::class, $post);
    }

    public function test_default_users(): void
    {
        $this->assertEquals(0, wp_get_current_user()->ID);
        
        wp_set_current_user(1);
        
        $this->assertEquals(1, wp_get_current_user()->ID);
        $this->assertEquals('admin', wp_get_current_user()->user_login);
    }
}
<<< /Integration/SampleTest.php <<<

>>> /Integration/_bootstrap.php >>>
<?php
/*
 * Integration suite bootstrap file.
 * 
 * This file is loaded AFTER the suite modules are initialized, WordPress, plugins and themes are loaded.
 * 
 * If you need to load plugins or themes, add them to the Integration suite configuration file, in the 
 * "modules.config.WPLoader.plugins" and "modules.config.WPLoader.theme" settings.
 * 
 * If you need to load one or more database dump file(s) to set up the test database, add the path to the dump file to
 * the "modules.config.WPLoader.dump" setting.
 */
<<< /Integration/_bootstrap.php <<<

>>> /_support/IntegrationTester.php >>>
<?php


/**
 * Inherited Methods
 * @method void wantToTest($text)
 * @method void wantTo($text)
 * @method void execute($callable)
 * @method void expectTo($prediction)
 * @method void expect($prediction)
 * @method void amGoingTo($argumentation)
 * @method void am($role)
 * @method void lookForwardTo($achieveValue)
 * @method void comment($description)
 * @method void pause()
 *
 * @SuppressWarnings(PHPMD)
*/
class IntegrationTester extends \Codeception\Actor
{
    use _generated\IntegrationTesterActions;

    /**
     * Define custom actions here
     */
}

<<< /_support/IntegrationTester.php <<<

>>> /_support/EndToEndTester.php >>>
<?php


/**
 * Inherited Methods
 * @method void wantToTest($text)
 * @method void wantTo($text)
 * @method void execute($callable)
 * @method void expectTo($prediction)
 * @method void expect($prediction)
 * @method void amGoingTo($argumentation)
 * @method void am($role)
 * @method void lookForwardTo($achieveValue)
 * @method void comment($description)
 * @method void pause()
 *
 * @SuppressWarnings(PHPMD)
*/
class EndToEndTester extends \Codeception\Actor
{
    use _generated\EndToEndTesterActions;

    /**
     * Define custom actions here
     */
}

<<< /_support/EndToEndTester.php <<<

>>> /_support/Helper/EndToEnd.php >>>
<?php
namespace Helper;

// here you can define custom actions
// all public methods declared in helper class will be available in $I

class EndToEnd extends \Codeception\Module
{

}

<<< /_support/Helper/EndToEnd.php <<<

>>> /_support/Helper/Integration.php >>>
<?php
namespace Helper;

// here you can define custom actions
// all public methods declared in helper class will be available in $I

class Integration extends \Codeception\Module
{

}

<<< /_support/Helper/Integration.php <<<

>>> /Integration.suite.yml >>>
# Integration suite configuration
#
# Run integration and "WordPress unit" tests.

actor: IntegrationTester
bootstrap: _bootstrap.php
modules:
    enabled:
        - lucatume\WPBrowser\Module\WPLoader
    config:
        lucatume\WPBrowser\Module\WPLoader:
           wpRootFolder: "%WORDPRESS_ROOT_DIR%" 
           dbUrl: '%WORDPRESS_DB_URL%'
           wpDebug: true
           tablePrefix: '%TEST_TABLE_PREFIX%'
           domain: '%WORDPRESS_DOMAIN%'
           adminEmail: 'admin@%WORDPRESS_DOMAIN%'
           title: 'Integration Tests'
           plugins: []
           theme: ''
<<< /Integration.suite.yml <<<

>>> /EndToEnd/_bootstrap.php >>>
<?php
/*
 * EndToEnd suite bootstrap file.
 * 
 * This file is loaded AFTER the suite modules are initialized and WordPress has been loaded by the WPLoader module.
 * 
 * The initial state of the WordPress site is the one set up by the dump file(s) loaded by the WPDb module, look for the
 * "modules.config.WPDb.dump" setting in the suite configuration file. The database will be dropped after each test
 * and re-created from the dump file(s).
 * 
 * You can modify and create new dump files using the `vendor/bin/codecept wp:cli EndToEnd <wp-cli command>` command
 * to run WP-CLI commands on the WordPress site and database used by the EndToEnd suite.
 * E.g.:
 * `vendor/bin/codecept wp:cli EndToEnd db import tests/Support/Data/dump.sql` to load  dump file.
 * `vendor/bin/codecept wp:cli EndToEnd plugin activate woocommerce` to activate the WooCommerce plugin.
 * `vendor/bin/codecept wp:cli EndToEnd user create alice alice@example.com --role=administrator` to create a new user.
 * `vendor/bin/codecept wp:cli EndToEnd db export tests/Support/Data/dump.sql` to update the dump file.
 */
<<< /EndToEnd/_bootstrap.php <<<

>>> /EndToEnd/ActivationCest.php >>>
<?php

namespace Tests\EndToEnd;

use EndToEndTester;

class ActivationCest
{
    public function test_homepage_works(EndToEndTester $I): void
    {
        $I->amOnPage('/');
        $I->seeElement('body');
    }
    
    public function test_can_login_as_admin(EndToEndTester $I): void
    {
        $I->loginAsAdmin();
        $I->amOnAdminPage('/');
        $I->seeElement('body.wp-admin');
    }
}

<<< /EndToEnd/ActivationCest.php <<<

>>> /.env >>>
# The path to the WordPress root directory, the one containing the wp-load.php file.
# This can be a relative path from the directory that contains the codeception.yml file,
# or an absolute path.
WORDPRESS_ROOT_DIR=.

# Tests will require a MySQL database to run.
# The database will be created if it does not exist.
# Do not use a database that contains important data!
WORDPRESS_DB_URL=sqlite://%codecept_root_dir%/tests/_data/db.sqlite

# The Integration suite will use this table prefix for the WordPress tables.
TEST_TABLE_PREFIX=test_

# This table prefix used by the WordPress site in end-to-end tests.
WORDPRESS_TABLE_PREFIX=wp_

# The URL and domain of the WordPress site used in end-to-end tests.
WORDPRESS_URL=http://localhost:62570
WORDPRESS_DOMAIN=localhost:62570
WORDPRESS_ADMIN_PATH=/wp-admin

# The username and password of the administrator user of the WordPress site used in end-to-end tests.
WORDPRESS_ADMIN_USER=admin
WORDPRESS_ADMIN_PASSWORD=password

# The host and port of the ChromeDriver server that will be used in end-to-end tests.
CHROMEDRIVER_HOST=localhost
CHROMEDRIVER_PORT=44885

# The port on which the PHP built-in server will serve the WordPress installation.
BUILTIN_SERVER_PORT=62570

<<< /.env <<<

>>> /_output/.gitkeep >>>

<<< /_output/.gitkeep <<<

>>> /_data/.gitkeep >>>

<<< /_data/.gitkeep <<<